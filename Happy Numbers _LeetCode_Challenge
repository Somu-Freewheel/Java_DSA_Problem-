A happy number is a number defined by the following process:

Starting with any positive integer, replace the number by the sum of the squares of its digits.
Repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1.
Those numbers for which this process ends in 1 are happy.
Return true if n is a happy number, and false if not.



class Solution {
    public boolean isHappy(int n) {
        Set<Integer>set=new HashSet<>();
        while(n!=1 && !set.contains(n)){
            set.add(n);
            int sum=0;
            while(n!=0){
                int dig=n%10;
                sum+=dig*dig;
                n=n/10;
            }
            n=sum;

        }
        if(n==1){
            return true;
        }else{
            return false;
        }
    }
}
